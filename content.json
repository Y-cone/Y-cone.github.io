{"meta":{"title":"Y博客","subtitle":"","description":"记录自己学习笔记的博客","author":"yc","url":"http://example.com","root":"/"},"pages":[{"title":"tags","date":"2023-05-02T17:36:38.000Z","updated":"2023-05-02T17:41:50.953Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""},{"title":"categories","date":"2023-05-02T17:36:49.000Z","updated":"2023-05-02T17:41:26.779Z","comments":true,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"mysql-存储过程","slug":"mysql-存储过程","date":"2023-05-02T07:33:39.000Z","updated":"2023-05-02T17:40:51.781Z","comments":true,"path":"2023/05/02/mysql-存储过程/","link":"","permalink":"http://example.com/2023/05/02/mysql-%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B/","excerpt":"","text":"存储过程1. 介绍存储过程是事先经过编译并存储在数据库中的一段SQL语句的集合，调用存储过程可以简化应用开发人员的很多工作，减少数据在数据库和应用服务器之间的传输，对于提高数据处理的效率是有好处的。 存储过程思想上很简单，就是数据库SQL语言层面的代码封装与重用，类似于函数或者说API，封装了系列操作，暴露接口给你进行操作。 特点 封装，复用 可以接收参数，也可以返回数据 减少网络交互，效率提升 2. 基本语法 创建 1234CREATE PROCEDURE 存储过程名称([参数列表])BEGIN -- SQL语句END; 调用 1CALL 名称([参数]); 查看 1234-- 查询指定数据库的存储过程及状态信息SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE ROUTINE_SCHEMA = &#x27;数据库名称&#x27;;-- 查询某个存储过程的定义SHOW CREATE PROCEDURE 存储过程名称; 删除 1DROP PROCEDURE [IF EXISTS] 存储过程名称; ==注意：在命令行中，执行创建存储过程的SQL语句时，需要通过关键字 delimiter 指定SQL语句的结束符。== 代码演示： 123456789101112131415161718192021222324252627-- 存储过程基本语法-- 创建CREATE PROCEDURE p1()BEGIN SELECT COUNT(*) FROM emp;END;-- 如果在命令行执行的话，上面语句会出错，因为遇到第一个分号就结束了，-- 所以需要用到 delimiter-- delimiter $$ --表示指定 $$ 为结束符（记得之后再使用delimiter改回来）-- CREATE PROCEDURE p1()-- BEGIN-- SELECT COUNT(*) FROM emp;-- END;$$-- 这样就可以解决-- 调用CALL p1();-- 查看SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE ROUTINE_SCHEMA = &#x27;hsp_db02&#x27;;SHOW CREATE PROCEDURE p1;-- 删除DROP PROCEDURE IF EXISTS p1;","categories":[{"name":"mysql学习","slug":"mysql学习","permalink":"http://example.com/categories/mysql%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"数据库","slug":"数据库","permalink":"http://example.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"}]},{"title":"first_blog","slug":"first-blog","date":"2023-05-01T13:31:52.000Z","updated":"2023-05-01T13:38:24.979Z","comments":true,"path":"2023/05/01/first-blog/","link":"","permalink":"http://example.com/2023/05/01/first-blog/","excerpt":"TEST: 永挎占赞迅民虚渔顶郑请莫缘耽川雷马底级谁鬼毙饭紫捕界事杂进蝶酷忧卡竹侦绕依悦佳笋漫剪物课咸陪滩耀铅册木疫殖份床隙窄致基胁卧某纸轿二勺栗暴救明蜜蜓山拢猴亭咬破圾扒陕叮招浆尼旱汉手欲扑梨么汗丰巾停满氏仓悔懂姿视抖攀换饲泡阻肺骑踏仙押冈衬宗年肯略斩河价浅胃牵搞蛙本地齐往撇狮骂牲纤对杀腔割球鉴编准渣皂过岩偿查寿娇林懒缓鞭勒企钥叠澡短惕脑票百少福望宅遗言流膊织雪贼脚扁骤同址放处甘选康乃仿抽桶块申合舰坝没患局淡脆侮口朝税卫杆第烦辅月爷晒等柴怕朴滋暗席菌社影醒立糖慈用女声功震粒拳胖丹耕音亿器肃忘穿枣霞套租映囊虫饿的归秀毯欧晚锈池职大种摔到吵赴纯波勿策脏赠叶虎杰烂想牌纹报碍誓痕群各扮疮习射执衔炼遥绣尸亚锁控敞鄙虹刀汽驳","text":"TEST: 永挎占赞迅民虚渔顶郑请莫缘耽川雷马底级谁鬼毙饭紫捕界事杂进蝶酷忧卡竹侦绕依悦佳笋漫剪物课咸陪滩耀铅册木疫殖份床隙窄致基胁卧某纸轿二勺栗暴救明蜜蜓山拢猴亭咬破圾扒陕叮招浆尼旱汉手欲扑梨么汗丰巾停满氏仓悔懂姿视抖攀换饲泡阻肺骑踏仙押冈衬宗年肯略斩河价浅胃牵搞蛙本地齐往撇狮骂牲纤对杀腔割球鉴编准渣皂过岩偿查寿娇林懒缓鞭勒企钥叠澡短惕脑票百少福望宅遗言流膊织雪贼脚扁骤同址放处甘选康乃仿抽桶块申合舰坝没患局淡脆侮口朝税卫杆第烦辅月爷晒等柴怕朴滋暗席菌社影醒立糖慈用女声功震粒拳胖丹耕音亿器肃忘穿枣霞套租映囊虫饿的归秀毯欧晚锈池职大种摔到吵赴纯波勿策脏赠叶虎杰烂想牌纹报碍誓痕群各扮疮习射执衔炼遥绣尸亚锁控敞鄙虹刀汽驳","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2023-05-01T13:10:31.346Z","updated":"2023-05-01T12:56:00.516Z","comments":true,"path":"2023/05/01/hello-world/","link":"","permalink":"http://example.com/2023/05/01/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[{"name":"mysql学习","slug":"mysql学习","permalink":"http://example.com/categories/mysql%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"数据库","slug":"数据库","permalink":"http://example.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"}]}